{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","name","value","onClick","toggle","defaultChecked","htmlFor","theme","defaultProps","tag2","TextArea","useState","text","setText","words","split","length","heading","onChange","event","target","rows","uppercase","toUpperCase","alert","lowercase","toLowerCase","word","i","up","charAt","lo","slice","newText","join","Alert","message","status","role","App","setMode","setAlert","color","setColor","alertMessage","msg","setTimeout","document","getElementById","checked","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e3d91a00.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from'prop-types';\r\n// import {Link} from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n    // const [mode,setMode]=useState('light');\r\n    // const [txt,setTxt]=useState('Enable Dark Mode');\r\n    // const [labelColor, setLabelColor]=useState('text-secondary')\r\n\r\n    // const toggleMode=()=>{\r\n    //     if(mode==='light'){\r\n    //         setMode('dark');\r\n    //         setTxt('Enable Light Mode');\r\n    //         setLabelColor('text-light');\r\n    //         document.body.style.backgroundColor= 'black';\r\n    //         document.body.style.color= 'white';\r\n    //     }\r\n    //     else{\r\n    //         setMode('light');\r\n    //         setTxt('Enable Dark Mode');\r\n    //         setLabelColor('text-secondary')\r\n    //         document.body.style.backgroundColor= 'white';\r\n    //         document.body.style.color= 'black';\r\n    //     }\r\n    // }\r\n\r\n    return(\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid \">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/about\">{props.tag2}</a>\r\n                    </li> */}\r\n                </ul>\r\n                {/* <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form> */}\r\n\r\n                {/* <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggle}  />\r\n                    <label className={`form-check-label `}htmlFor=\"flexSwitchCheckDefault\" >Enable {props.mode==='light'?'Dark':'Light'} Mode</label>\r\n                </div> */}\r\n\r\n                <div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input bg-light\" type=\"radio\" name=\"inlineRadioOptions\" id=\"Radio1\" value=\"option1\" onClick={props.toggle} defaultChecked />\r\n                        <label className=\"form-check-label\" htmlFor=\"Radio1\"></label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input bg-dark\" type=\"radio\" name=\"inlineRadioOptions\" id=\"Radio2\" value=\"option1\" onClick={props.toggle}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"Radio2\"></label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input bg-primary\" type=\"radio\" name=\"inlineRadioOptions\" id=\"Radio3\" value=\"option1\" onClick={props.toggle}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"Radio3\"></label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input bg-success\" type=\"radio\" name=\"inlineRadioOptions\" id=\"Radio4\" value=\"option1\" onClick={props.toggle}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"Radio4\"></label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input bg-warning\" type=\"radio\" name=\"inlineRadioOptions\" id=\"Radio5\" value=\"option3\" onClick={props.toggle}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"Radio5\"></label>\r\n                    </div>\r\n                    <label className=\"form-check-label mx-3\" >Theme : {props.theme}</label>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    tag2: PropTypes.string\r\n}\r\nNavbar.defaultProps={\r\n    title: 'Title',\r\n    tag2: 'About'\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from \"react\";\r\n\r\n\r\nfunction TextArea(props){\r\n\r\n    const onChangeEvent = (event)=>{\r\n        // console.log(event.target.value);\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handleUpclick = () => {\r\n        let uppercase= text.toUpperCase();\r\n        setText(uppercase);\r\n        // console.log(text.toUpperCase());\r\n        props.alert(\"Converted to Uppercase\",\"success\")\r\n    }\r\n    \r\n    const handleLoclick = () =>{\r\n        let lowercase = text.toLowerCase();\r\n        setText(lowercase);\r\n        props.alert(\"Converted to Lowercase\",\"success\")\r\n    }\r\n    const handleCaclick = () =>{\r\n        let small= text.toLowerCase();\r\n        let word=small.split(\" \");\r\n        for(let i=0; i<word.length; i+=1){\r\n            let up= word[i].charAt(0).toUpperCase();\r\n            let lo= word[i].slice(1);\r\n            word[i] = up+lo;\r\n            // setText(up+lo)\r\n        }\r\n        let newText = word.join(\" \");\r\n        setText(newText);\r\n        props.alert(\"Text Capitalized\",\"success\")\r\n    }\r\n    const handleClear = () =>{\r\n        setText(\"\");\r\n        props.alert(\"Text Cleared\",\"success\")\r\n    }\r\n\r\n    const [text,setText]=useState(\"\");\r\n\r\n    let words = text.split(' ').length -1;\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"container my-5\">\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                <textarea className={`form-control bg-${props.mode} text-${props.mode==='light'?'dark':'light'}`} id=\"mybox\" value={text} onChange={onChangeEvent} rows=\"8\" ></textarea>\r\n                </div>\r\n                <button className={`btn btn-${props.mode} mx-2`} onClick={handleUpclick}>\r\n                    Convert to Uppercase\r\n                </button>\r\n                <button className={`btn btn-${props.mode} mx-2`} onClick={handleLoclick}>\r\n                    Convert to Lowercase\r\n                </button>\r\n                <button className={`btn btn-${props.mode} mx-2`} onClick={handleCaclick}>\r\n                    Capitalize Text\r\n                </button>\r\n                <button className={`btn btn-${props.mode} mx-2`} onClick={handleClear}>\r\n                    Clear All\r\n                </button>\r\n            </div>\r\n            <div className=\"container my-5\" >\r\n                <h3>Your Text Summary</h3>\r\n                <p>\r\n                    <b>{words}</b> Words and <b>{text.length}</b> Characters\r\n                </p>\r\n                <p>\r\n                    {0.008 * words} minutes read\r\n                </p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length===0?\"Enter text in the textarea to preview!\":text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nTextArea.defaultProps={\r\n    heading:'Enter below'\r\n}\r\nexport default TextArea;","import React from 'react'\r\nfunction Alert(props) {\r\n    // let status = props.message.status.toLowerCase();\r\n    // return status.charAt(0).toUpperCase()+status.slice(1);\r\n    return(\r\n        props.message && \r\n        <div className={`alert alert-${props.message.status} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.message.status.charAt(0).toUpperCase()+props.message.status.slice(1)}</strong> : {props.message.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;","// import './App.css';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/Textarea';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [alert,setAlert]=useState(null);\n  const [color,setColor]=useState('light');\n  \n  const theme=()=>{\n    if(document.getElementById('Radio1').checked){\n      setMode('light');\n      setColor('Light');\n      document.body.style.backgroundColor= 'white';\n      document.body.style.color= 'black';\n      alertMessage(`Theme changed`,'success')\n      // console.log(color);\n\n    }\n    else if(document.getElementById('Radio2').checked){\n      setMode('dark');\n      setColor('Dark');\n      document.body.style.backgroundColor= 'black';\n      document.body.style.color= 'white';\n      alertMessage(`Theme changed`,'success')\n      // console.log(color);\n\n    }\n    else if(document.getElementById('Radio3').checked){\n      setMode('dark');\n      setColor('Blue');\n      document.body.style.backgroundColor= '#0e0640';\n      document.body.style.color= 'white';\n      alertMessage(`Theme changed`,'success')\n      // console.log(color);\n\n    }\n    else if(document.getElementById('Radio4').checked){\n      setMode('dark');\n      setColor('Green');\n      document.body.style.backgroundColor= '#01391C';\n      document.body.style.color= 'white';\n      alertMessage(`Theme changed`,'success')\n      // console.log(color);\n\n    }\n    else if(document.getElementById('Radio5').checked){\n      setMode('light');\n      setColor('Yellow');\n      document.body.style.backgroundColor= '#ffc900';\n      document.body.style.color= 'black';\n      alertMessage(`Theme changed `,'success')\n      // console.log(color);\n    }\n  }\n  \n  const alertMessage=(msg,status)=>{\n    setAlert({\n      message:msg,\n      status:status\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtis\" tag2=\"About\" toggle={theme} mode={mode}  theme={color}/>\n      <Alert message={alert}/>\n      <div className=\"container\">\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About />}/> */}\n            \n          {/* </Route> */}\n\n          {/* <Route exact path=\"/\" element={<TextArea heading=\"Enter the text to analize here\" mode={mode} alert={alertMessage}/>}/> */}\n          <TextArea heading=\"Enter the text to analize here\" mode={mode} alert={alertMessage}/>\n          {/* </Route> */}\n        {/* </Routes> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}